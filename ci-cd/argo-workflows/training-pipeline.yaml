apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: ml-pipeline-
spec:
  entrypoint: ml-pipeline
  
  volumeClaimTemplates:
  - metadata:
      name: model-store
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 2Gi
  
  templates:
  - name: ml-pipeline
    dag:
      tasks:
      - name: preprocess-data
        template: preprocess
      - name: train-model
        template: train
        dependencies: [preprocess-data]
      - name: evaluate-model
        template: evaluate
        dependencies: [train-model]
      - name: serve-model
        template: serve
        dependencies: [evaluate-model]

  - name: preprocess
    container:
      image: ml-train:latest
      imagePullPolicy: Never
      command: [python]
      args: ["/app/scripts/train.py", "--step=preprocess"]
      workingDir: /app
      volumeMounts:
      - name: model-store
        mountPath: /models

  - name: train
    container:
      image: ml-train:latest
      imagePullPolicy: Never
      command: [python]
      args: ["/app/scripts/train.py", "--step=train"]
      workingDir: /app
      volumeMounts:
      - name: model-store
        mountPath: /models
    outputs:
      artifacts:
      - name: trained-model
        path: /models/model.pkl

  - name: evaluate
    container:
      image: ml-train:latest
      imagePullPolicy: Never
      command: [python]
      args: ["/app/scripts/evaluate.py"]
      workingDir: /app
      volumeMounts:
      - name: model-store
        mountPath: /models

  - name: serve
    container:
      image: ml-serve:latest
      imagePullPolicy: Never
      command: [python]
      args: ["/app/scripts/predict.py"]
      workingDir: /app
      volumeMounts:
      - name: model-store
        mountPath: /models
      ports:
      - containerPort: 5000